#sudo: required

#os: 
  #- linux
  #- osx
  
#dist: trusty
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
    - os: osx
      osx_image: xcode8.2

services:
  - docker

env:
  global:
  - REPORT_EXIT_STATUS=1
  - ACCEPT_EULA=Y
  - PHPSQLDIR=/REPO/msphpsql-dev
  - TEST_PHP_SQL_SERVER=sql
  - SQLSRV_DBNAME=msphpsql_sqlsrv
  - PDOSQLSRV_DBNAME=msphpsql_pdosqlsrv  

before_install:
  #- docker pull microsoft/mssql-server-linux
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      brew update; 
      brew tap homebrew/dupes; 
      brew tap homebrew/versions;
      brew tap homebrew/homebrew-php;
      brew unlink php55;
      brew unlink php56; 
      brew install php70;
      brew install unixodbc;
      brew install llvm --with-clang --with-clang-extra-tools ;
      brew install docker;
      chmod a+x ./source/packagize.sh;
    else
      docker pull microsoft/mssql-server-linux
    fi
 
install:
  - docker build --build-arg PHPSQLDIR=$PHPSQLDIR -t msphpsql-dev -f Dockerfile-msphpsql .
  - docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Password12@' -p 1433:1433 --name=$TEST_PHP_SQL_SERVER -d microsoft/mssql-server-linux

script: 
  - |
    if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then
      docker run -e TRAVIS_JOB_ID -t -d -w $PHPSQLDIR --link $TEST_PHP_SQL_SERVER --name=client msphpsql-dev
      docker ps -a 
      docker exec client python ./test/setup/setup_dbs.py -dbname $SQLSRV_DBNAME
      docker exec client python ./test/setup/setup_dbs.py -dbname $PDOSQLSRV_DBNAME
      docker exec client php ./source/pdo_sqlsrv/run-tests.php ./test/pdo_sqlsrv/*.phpt
      docker exec client php ./source/sqlsrv/run-tests.php ./test/sqlsrv/*.phpt
      docker exec client bash -c 'for f in ./test/sqlsrv/*.diff; do ls $f 2>/dev/null; cat $f 2>/dev/null; done || true'
      docker exec client bash -c 'for f in ./test/sqlsrv/*.out; do ls $f 2>/dev/null; cat $f 2>/dev/null; done || true'
      docker exec client bash -c 'for f in ./test/pdo_sqlsrv/*.diff; do ls $f 2>/dev/null; cat $f 2>/dev/null; done || true' 
      docker exec client bash -c 'for f in ./test/pdo_sqlsrv/*.out; do ls $f 2>/dev/null; cat $f 2>/dev/null; done || true' 
      docker exec client python ./test/setup/cleanup_dbs.py -dbname $SQLSRV_DBNAME
      docker exec client python ./test/setup/cleanup_dbs.py -dbname $PDOSQLSRV_DBNAME
      docker exec client coveralls -e ./source/shared/ --gcov-options '\-lp'
      docker stop client
      docker ps -a 
    else
      clang --version
      export BUILDDIR=$PWD/source
      echo $BUILDDIR
      cd $BUILDDIR
      /bin/bash packagize.sh
      cd $BUILDDIR/sqlsrv
      phpize
      ./configure CC='clang' CXX='clang++'
      make
      cd $BUILDDIR/pdo_sqlsrv
      phpize
      ./configure CC='clang' CXX='clang++'
      make
    fi

notifications:
  email: false
